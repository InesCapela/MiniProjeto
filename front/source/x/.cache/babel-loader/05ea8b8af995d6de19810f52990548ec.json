{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/app/src/components/Users/EditUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport { useStyles } from '../Styles/Styles';\nimport { CircularProgress } from '@material-ui/core';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nconst EditUser = props => {\n  _s();\n\n  // styles\n  const classes = useStyles(); // state\n\n  const [name, setUsername] = useState('');\n  const [pass, setPassword] = useState('');\n  const {\n    username,\n    password,\n    id\n  } = props.user;\n  const {\n    token,\n    onGetUserPlacesAdmin\n  } = props;\n  useEffect(() => {\n    onGetUserPlacesAdmin(id, token);\n    setUsername(username);\n    setPassword(password);\n  }, [username, password, id, token, onGetUserPlacesAdmin]);\n\n  const addPlaceToUserHandler = place => {\n    props.onAddPlaceToUserHandler(props.user, place, token);\n  };\n\n  const removePlaceFromUserHandler = place => {\n    props.onRemovePlaceFromUserHandler(props.user, place, token);\n  };\n\n  let usrPlaces = /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this);\n\n  let otherPlaces = /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n\n  if (!props.loading && props.user.username !== 'admin') {\n    usrPlaces = props.usrPlaces.map(place => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: place.name\n        }, place.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => removePlaceFromUserHandler(place),\n            variant: \"danger\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, place.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this);\n    }); // filter places that user dont have\n\n    const otherplacesarray = props.allPlaces.filter(placesAll => {\n      return !props.usrPlaces.find(placesUser => {\n        return placesAll.ID === placesUser.ID;\n      });\n    });\n    otherPlaces = otherplacesarray.map(place => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: place.name\n        }, place.ID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => addPlaceToUserHandler(place),\n            variant: \"success\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, place.ID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => props.updateUser(event, {\n        id: props.user.id,\n        username: name,\n        password: pass,\n        isAdmin: props.user.isAdmin,\n        places: props.user.places\n      }),\n      className: classes.authTextFileds,\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          value: name,\n          required: true,\n          id: \"standard-basic\",\n          label: \"Username\",\n          onChange: event => {\n            setUsername(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          value: pass,\n          required: true,\n          id: \"standard-password-input\",\n          label: \"Password\",\n          type: \"password\",\n          onChange: event => {\n            setPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          disabled: name === username && pass === password,\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Edit User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), props.user.username !== 'admin' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Manage User Places\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [usrPlaces, otherPlaces]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}; // get state from reducer\n\n\n_s(EditUser, \"z5amevs4ILRQmKtvpGCTz0L3CaQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditUser;\n\nconst mapStateToProps = state => {\n  return {\n    usrPlaces: state.users.userPlaces\n  };\n}; // actions to reducer (dispatch)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetUserPlacesAdmin: (id, token) => dispatch(actions.getUserPlacesByAdmin(id, token)),\n    onAddPlaceToUserHandler: (user, place, token) => dispatch(actions.addPlaceToUserHandler(user, place, token)),\n    onRemovePlaceFromUserHandler: (user, place, token) => dispatch(actions.removePlaceToUserHandler(user, place, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/app/src/components/Users/EditUser.js"],"names":["React","useState","useEffect","connect","actions","TextField","Container","useStyles","CircularProgress","Table","Button","EditUser","props","classes","name","setUsername","pass","setPassword","username","password","id","user","token","onGetUserPlacesAdmin","addPlaceToUserHandler","place","onAddPlaceToUserHandler","removePlaceFromUserHandler","onRemovePlaceFromUserHandler","usrPlaces","otherPlaces","loading","map","ID","otherplacesarray","allPlaces","filter","placesAll","find","placesUser","event","updateUser","isAdmin","places","authTextFileds","target","value","mapStateToProps","state","users","userPlaces","mapDispatchToProps","dispatch","getUserPlacesByAdmin","removePlaceToUserHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions/index';\n\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport { useStyles } from '../Styles/Styles';\nimport { CircularProgress } from '@material-ui/core';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\n\nconst EditUser = props => {\n\n    // styles\n    const classes = useStyles();\n\n    // state\n    const [name, setUsername] = useState('');\n    const [pass, setPassword] = useState('');\n\n    const { username, password, id } = props.user;\n    const { token, onGetUserPlacesAdmin } = props;\n\n    useEffect(() => {\n        onGetUserPlacesAdmin(id, token);\n        setUsername(username);\n        setPassword(password);\n    }, [username, password, id, token, onGetUserPlacesAdmin]);\n\n    const addPlaceToUserHandler = (place) => {\n        props.onAddPlaceToUserHandler(props.user, place, token);\n    }\n\n    const removePlaceFromUserHandler = (place) => {\n        props.onRemovePlaceFromUserHandler(props.user, place, token);\n    }\n\n    let usrPlaces = <CircularProgress />\n    let otherPlaces = <CircularProgress />\n\n    if (!props.loading && props.user.username !== 'admin') {\n        usrPlaces = props.usrPlaces.map((place) => {\n            return (\n                <tr key={place.ID}>\n                    <td key={place.ID}>{place.name}</td>\n                    <td><Button onClick={() => removePlaceFromUserHandler(place)} variant=\"danger\">Remove</Button></td>\n                </tr>\n            )\n        });\n\n        // filter places that user dont have\n        const otherplacesarray = props.allPlaces.filter((placesAll) => {\n            return !props.usrPlaces.find((placesUser) => {\n                return placesAll.ID === placesUser.ID\n            })\n        });\n\n        otherPlaces = otherplacesarray.map((place) => {\n            return (\n                <tr key={place.ID}>\n                    <td key={place.ID}>{place.name}</td>\n                    <td><Button onClick={() => addPlaceToUserHandler(place)} variant=\"success\">Add</Button></td>\n                </tr>\n            )\n        });\n    }\n\n    return (\n        <Container maxWidth=\"sm\" >\n            <form onSubmit={(event) => props.updateUser(event, { id: props.user.id, username: name, password: pass, isAdmin: props.user.isAdmin, places: props.user.places })} className={classes.authTextFileds} noValidate autoComplete=\"off\">\n                <div>\n                    <TextField value={name} required id=\"standard-basic\" label=\"Username\" onChange={event => {\n                        setUsername(event.target.value);\n                    }} />\n                </div>\n                <div>\n                    <TextField value={pass} required id=\"standard-password-input\" label=\"Password\" type=\"password\" onChange={event => {\n                        setPassword(event.target.value);\n                    }} />\n                </div>\n                <div>\n                    <Button disabled={name === username && pass === password} type=\"submit\" variant=\"primary\">Edit User</Button>\n                </div>\n            </form>\n            <hr />\n            {props.user.username !== 'admin' ?\n                <React.Fragment>\n                    <h3>Manage User Places</h3>\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Option</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {usrPlaces}\n                            {otherPlaces}\n                        </tbody>\n                    </Table>\n                </React.Fragment>\n                : null}\n\n        </Container >\n    );\n}\n\n// get state from reducer\nconst mapStateToProps = (state) => {\n    return {\n        usrPlaces: state.users.userPlaces,\n    };\n}\n\n// actions to reducer (dispatch)\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGetUserPlacesAdmin: (id, token) => dispatch(actions.getUserPlacesByAdmin(id, token)),\n        onAddPlaceToUserHandler: (user, place, token) => dispatch(actions.addPlaceToUserHandler(user, place, token)),\n        onRemovePlaceFromUserHandler: (user, place, token) => dispatch(actions.removePlaceToUserHandler(user, place, token)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditUser);\n"]},"metadata":{},"sourceType":"module"}