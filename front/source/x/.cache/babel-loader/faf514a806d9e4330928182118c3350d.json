{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or the WebSocket-compatible interface\n * exposed by `ws` for Node environment.\n */\n\nvar WebSocket = BrowserWebSocket || (typeof window !== 'undefined' ? null : require('ws'));\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void 0;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'buffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\n\nif ('undefined' != typeof navigator && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function (data) {\n    var self = this;\n    setTimeout(function () {\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } //Sometimes the websocket has already been closed but the browser didn't\n        //have a chance of informing us about it yet, in that case send will\n        //throw an error\n\n\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' == schema && this.port != 443 || 'ws' == schema && this.port != 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};","map":{"version":3,"sources":["/app/node_modules/engine.io-client/lib/transports/websocket.js"],"names":["Transport","require","parser","parseqs","inherit","yeast","debug","BrowserWebSocket","global","WebSocket","MozWebSocket","window","module","exports","WS","opts","forceBase64","supportsBinary","perMessageDeflate","call","prototype","name","doOpen","check","self","uri","protocols","agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","extraHeaders","headers","ws","binaryType","undefined","supports","binary","addEventListeners","onopen","onOpen","onclose","onClose","onmessage","ev","onData","data","onerror","e","onError","navigator","test","userAgent","setTimeout","write","packets","writable","total","length","i","l","packet","encodePacket","options","compress","len","Buffer","byteLength","threshold","send","done","emit","doClose","close","query","schema","secure","port","timestampRequests","timestampParam","b64","encode","ipv6","hostname","indexOf","path"],"mappings":"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","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or the WebSocket-compatible interface\n * exposed by `ws` for Node environment.\n */\n\nvar WebSocket = BrowserWebSocket || (typeof window !== 'undefined' ? null : require('ws'));\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'buffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        //Sometimes the websocket has already been closed but the browser didn't\n        //have a chance of informing us about it yet, in that case send will\n        //throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e){\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done(){\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function(){\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n"]},"metadata":{},"sourceType":"script"}