{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : ':' + obj.port);\n  return obj;\n}","map":{"version":3,"sources":["/app/node_modules/socket.io-client/lib/url.js"],"names":["parseuri","require","debug","module","exports","url","uri","loc","obj","global","location","protocol","host","charAt","test","port","path","ipv6","indexOf","id","href"],"mappings":"AACA;AACA;AACA;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAP,CAAiB,sBAAjB,CAAZ;AAEA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAT,CAAaC,GAAb,EAAkBC,GAAlB,EAAsB;AACpB,MAAIC,GAAG,GAAGF,GAAV,CADoB,CAGpB;;AACA,MAAIC,GAAG,GAAGA,GAAG,IAAIE,MAAM,CAACC,QAAxB;AACA,MAAI,QAAQJ,GAAZ,EAAiBA,GAAG,GAAGC,GAAG,CAACI,QAAJ,GAAe,IAAf,GAAsBJ,GAAG,CAACK,IAAhC,CALG,CAOpB;;AACA,MAAI,YAAY,OAAON,GAAvB,EAA4B;AAC1B,QAAI,OAAOA,GAAG,CAACO,MAAJ,CAAW,CAAX,CAAX,EAA0B;AACxB,UAAI,OAAOP,GAAG,CAACO,MAAJ,CAAW,CAAX,CAAX,EAA0B;AACxBP,QAAAA,GAAG,GAAGC,GAAG,CAACI,QAAJ,GAAeL,GAArB;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAGC,GAAG,CAACK,IAAJ,GAAWN,GAAjB;AACD;AACF;;AAED,QAAI,CAAC,sBAAsBQ,IAAtB,CAA2BR,GAA3B,CAAL,EAAsC;AACpCJ,MAAAA,KAAK,CAAC,sBAAD,EAAyBI,GAAzB,CAAL;;AACA,UAAI,eAAe,OAAOC,GAA1B,EAA+B;AAC7BD,QAAAA,GAAG,GAAGC,GAAG,CAACI,QAAJ,GAAe,IAAf,GAAsBL,GAA5B;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAG,aAAaA,GAAnB;AACD;AACF,KAhByB,CAkB1B;;;AACAJ,IAAAA,KAAK,CAAC,UAAD,EAAaI,GAAb,CAAL;AACAE,IAAAA,GAAG,GAAGR,QAAQ,CAACM,GAAD,CAAd;AACD,GA7BmB,CA+BpB;;;AACA,MAAI,CAACE,GAAG,CAACO,IAAT,EAAe;AACb,QAAI,cAAcD,IAAd,CAAmBN,GAAG,CAACG,QAAvB,CAAJ,EAAsC;AACpCH,MAAAA,GAAG,CAACO,IAAJ,GAAW,IAAX;AACD,KAFD,MAGK,IAAI,eAAeD,IAAf,CAAoBN,GAAG,CAACG,QAAxB,CAAJ,EAAuC;AAC1CH,MAAAA,GAAG,CAACO,IAAJ,GAAW,KAAX;AACD;AACF;;AAEDP,EAAAA,GAAG,CAACQ,IAAJ,GAAWR,GAAG,CAACQ,IAAJ,IAAY,GAAvB;AAEA,MAAIC,IAAI,GAAGT,GAAG,CAACI,IAAJ,CAASM,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAAtC;AACA,MAAIN,IAAI,GAAGK,IAAI,GAAG,MAAMT,GAAG,CAACI,IAAV,GAAiB,GAApB,GAA0BJ,GAAG,CAACI,IAA7C,CA5CoB,CA8CpB;;AACAJ,EAAAA,GAAG,CAACW,EAAJ,GAASX,GAAG,CAACG,QAAJ,GAAe,KAAf,GAAuBC,IAAvB,GAA8B,GAA9B,GAAoCJ,GAAG,CAACO,IAAjD,CA/CoB,CAgDpB;;AACAP,EAAAA,GAAG,CAACY,IAAJ,GAAWZ,GAAG,CAACG,QAAJ,GAAe,KAAf,GAAuBC,IAAvB,IAA+BL,GAAG,IAAIA,GAAG,CAACQ,IAAJ,IAAYP,GAAG,CAACO,IAAvB,GAA8B,EAA9B,GAAoC,MAAMP,GAAG,CAACO,IAA7E,CAAX;AAEA,SAAOP,GAAP;AACD","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n"]},"metadata":{},"sourceType":"script"}