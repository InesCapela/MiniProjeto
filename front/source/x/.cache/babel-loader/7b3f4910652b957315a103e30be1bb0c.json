{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/src/components/Places/PlacesPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Places from './Places';\nimport * as actions from '../../store/actions/index';\nimport * as api from '../../store/actions/api';\nimport socketIOClient from \"socket.io-client\";\n\nconst PlacesPage = props => {\n  const socket = socketIOClient(api.URL_SOCKETIO, {\n    extraHeaders: {\n      \"token\": props.token\n    }\n  });\n  socket.on(\"connect\", () => {\n    socket.emit(\"set-token\", props.token);\n    console.log(\"Socket.io Connection: \");\n    console.log(socket);\n  });\n  socket.on(\"error\", data => {\n    console.log(\"Socket.io Error:\");\n    console.log(data);\n  });\n  socket.on(\"disconnect\", data => {\n    console.log(\"Socket.io Disconnected ...\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Places, {\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}; // get state from reducer\n\n\n_c = PlacesPage;\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    isAdmin: state.auth.isAdmin,\n    places: state.places.places,\n    loading: state.loadingError.loading,\n    error: state.loadingError.error\n  };\n}; // actions to reducer (dispatch)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetAllPlaces: token => dispatch(actions.fetchAllPlaces(token)),\n    onGetUserPlaces: token => dispatch(actions.fetchUserPlaces(token)),\n    onUpdatePlace: (place, token) => dispatch(actions.editPlace(place, token)),\n    onDeletePlace: (id, token) => dispatch(actions.deletePlace(id, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacesPage);\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacesPage\");","map":{"version":3,"sources":["/app/src/components/Places/PlacesPage.js"],"names":["React","useEffect","useState","connect","Places","actions","api","socketIOClient","PlacesPage","props","socket","URL_SOCKETIO","extraHeaders","token","on","emit","console","log","data","mapStateToProps","state","auth","isAdmin","places","loading","loadingError","error","mapDispatchToProps","dispatch","onGetAllPlaces","fetchAllPlaces","onGetUserPlaces","fetchUserPlaces","onUpdatePlace","place","editPlace","onDeletePlace","id","deletePlace"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,yBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAExB,QAAMC,MAAM,GAAGH,cAAc,CAACD,GAAG,CAACK,YAAL,EAAmB;AAC5CC,IAAAA,YAAY,EAAE;AACV,eAASH,KAAK,CAACI;AADL;AAD8B,GAAnB,CAA7B;AAMAH,EAAAA,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvBJ,IAAAA,MAAM,CAACK,IAAP,CAAY,WAAZ,EAAyBN,KAAK,CAACI,KAA/B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACH,GAJD;AAMAA,EAAAA,MAAM,CAACI,EAAP,CAAU,OAAV,EAAoBI,IAAD,IAAU;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACH,GAHD;AAKAR,EAAAA,MAAM,CAACI,EAAP,CAAU,YAAV,EAAyBI,IAAD,IAAU;AAC9BF,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,GAFD;AAIA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEP;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA5BD,C,CA8BA;;;KA9BMF,U;;AA+BN,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,KAAK,EAAEO,KAAK,CAACC,IAAN,CAAWR,KADf;AAEHS,IAAAA,OAAO,EAAEF,KAAK,CAACC,IAAN,CAAWC,OAFjB;AAGHC,IAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,CAAaA,MAHlB;AAIHC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,YAAN,CAAmBD,OAJzB;AAKHE,IAAAA,KAAK,EAAEN,KAAK,CAACK,YAAN,CAAmBC;AALvB,GAAP;AAOH,CARD,C,CAUA;;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,cAAc,EAAGhB,KAAD,IAAWe,QAAQ,CAACvB,OAAO,CAACyB,cAAR,CAAuBjB,KAAvB,CAAD,CADhC;AAEHkB,IAAAA,eAAe,EAAGlB,KAAD,IAAWe,QAAQ,CAACvB,OAAO,CAAC2B,eAAR,CAAwBnB,KAAxB,CAAD,CAFjC;AAGHoB,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQrB,KAAR,KAAkBe,QAAQ,CAACvB,OAAO,CAAC8B,SAAR,CAAkBD,KAAlB,EAAyBrB,KAAzB,CAAD,CAHtC;AAIHuB,IAAAA,aAAa,EAAE,CAACC,EAAD,EAAKxB,KAAL,KAAee,QAAQ,CAACvB,OAAO,CAACiC,WAAR,CAAoBD,EAApB,EAAwBxB,KAAxB,CAAD;AAJnC,GAAP;AAMH,CAPD;;AASA,eAAeV,OAAO,CAACgB,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Places from './Places';\nimport * as actions from '../../store/actions/index';\nimport * as api from '../../store/actions/api';\nimport socketIOClient from \"socket.io-client\";\n\n\nconst PlacesPage = props => {\n\n    const socket = socketIOClient(api.URL_SOCKETIO, {\n        extraHeaders: {\n            \"token\": props.token\n        }\n    });\n    \n    socket.on(\"connect\", () => {\n        socket.emit(\"set-token\", props.token)\n        console.log(\"Socket.io Connection: \")\n        console.log(socket)\n    })\n\n    socket.on(\"error\", (data) => {\n        console.log(\"Socket.io Error:\")\n        console.log(data)\n    })\n\n    socket.on(\"disconnect\", (data) => {\n        console.log(\"Socket.io Disconnected ...\")\n    })\n\n    return (\n        <div>\n            <Places socket={socket}></Places>\n        </div>\n    );\n}\n\n// get state from reducer\nconst mapStateToProps = (state) => {\n    return {\n        token: state.auth.token,\n        isAdmin: state.auth.isAdmin,\n        places: state.places.places,\n        loading: state.loadingError.loading,\n        error: state.loadingError.error,\n    };\n}\n\n// actions to reducer (dispatch)\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGetAllPlaces: (token) => dispatch(actions.fetchAllPlaces(token)),\n        onGetUserPlaces: (token) => dispatch(actions.fetchUserPlaces(token)),\n        onUpdatePlace: (place, token) => dispatch(actions.editPlace(place, token)),\n        onDeletePlace: (id, token) => dispatch(actions.deletePlace(id, token)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacesPage);"]},"metadata":{},"sourceType":"module"}