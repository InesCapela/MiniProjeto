{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nimport * as api from '../actions/api';\nimport * as loadingErrorActions from './loadingError';\n\nconst getAllPlaces = places => {\n  return {\n    type: actionTypes.GET_ALL_PLACES,\n    places: places\n  };\n};\n\nexport const fetchAllPlaces = token => {\n  return dispatch => {\n    dispatch(loadingErrorActions.startRequest());\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.get(api.URL_GET_ALL_PLACES, auth).then(response => {\n      dispatch(getAllPlaces(response.data.data));\n      dispatch(loadingErrorActions.endRequest());\n    }).catch(err => {\n      console.log(err);\n      dispatch(loadingErrorActions.errorRequest(err.toString()));\n    });\n  };\n};\n\nconst getUserPlaces = places => {\n  return {\n    type: actionTypes.GET_USER_PLACES,\n    places: places\n  };\n};\n\nexport const fetchUserPlaces = token => {\n  return dispatch => {\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.get(api.URL_USER_PLACES, auth).then(response => {\n      dispatch(getUserPlaces(response.data.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst addPlace = (place, id) => {\n  return {\n    type: actionTypes.CREATE_PLACE,\n    place: place,\n    id: id\n  };\n};\n\nexport const createPlace = (place, token) => {\n  return dispatch => {\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.post(api.URL_PLACES_ADD, place, auth).then(res => {\n      dispatch(addPlace(place, res.data.resourceId));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst onDeletePlace = id => {\n  return {\n    type: actionTypes.DELETE_PLACE,\n    id: id\n  };\n};\n\nexport const deletePlace = (id, token) => {\n  return dispatch => {\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.delete(api.URL_PLACES_DELETE + id, auth).then(res => {\n      dispatch(onDeletePlace(id));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst updatePlace = place => {\n  return {\n    type: actionTypes.EDIT_PLACE,\n    place: place\n  };\n};\n\nexport const editPlace = (place, token) => {\n  return dispatch => {\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.put(api.URL_PLACES_EDIT + place.ID, place, auth).then(res => {\n      dispatch(updatePlace(place));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/app/src/store/actions/places.js"],"names":["axios","actionTypes","api","loadingErrorActions","getAllPlaces","places","type","GET_ALL_PLACES","fetchAllPlaces","token","dispatch","startRequest","auth","headers","Authorization","get","URL_GET_ALL_PLACES","then","response","data","endRequest","catch","err","console","log","errorRequest","toString","getUserPlaces","GET_USER_PLACES","fetchUserPlaces","URL_USER_PLACES","addPlace","place","id","CREATE_PLACE","createPlace","post","URL_PLACES_ADD","res","resourceId","onDeletePlace","DELETE_PLACE","deletePlace","delete","URL_PLACES_DELETE","updatePlace","EDIT_PLACE","editPlace","put","URL_PLACES_EDIT","ID"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\nimport * as api from '../actions/api';\nimport * as loadingErrorActions from './loadingError';\n\n\nconst getAllPlaces = (places) => {\n    return {\n        type: actionTypes.GET_ALL_PLACES,\n        places: places\n    }\n}\n\nexport const fetchAllPlaces = (token) => {\n    return (dispatch) => {\n        dispatch(loadingErrorActions.startRequest());\n        const auth = {\n            headers: {\n                Authorization: token\n            }\n        };\n        axios.get(api.URL_GET_ALL_PLACES, auth).then(response => {\n            dispatch(getAllPlaces(response.data.data));\n            dispatch(loadingErrorActions.endRequest());\n        }).catch(err => {\n            console.log(err)\n            dispatch(loadingErrorActions.errorRequest(err.toString()));\n        });\n    }\n}\n\nconst getUserPlaces = (places) => {\n    return {\n        type: actionTypes.GET_USER_PLACES,\n        places: places\n    }\n}\n\nexport const fetchUserPlaces = (token) => {\n    return (dispatch) => {\n        const auth = {\n            headers: {\n                Authorization: token\n            }\n        };\n        axios.get(api.URL_USER_PLACES, auth).then(response => {\n            dispatch(getUserPlaces(response.data.data));\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n}\n\nconst addPlace = (place, id) => {\n    return {\n        type: actionTypes.CREATE_PLACE,\n        place: place,\n        id: id,\n    }\n}\n\nexport const createPlace = (place, token) => {\n    return (dispatch) => {\n        const auth = {\n            headers: {\n                Authorization: token\n            }\n        };\n        axios.post(api.URL_PLACES_ADD, place, auth).then(res => {\n            dispatch(addPlace(place, res.data.resourceId));\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n}\n\nconst onDeletePlace = (id) => {\n    return {\n        type: actionTypes.DELETE_PLACE,\n        id: id,\n    }\n}\n\nexport const deletePlace = (id, token) => {\n    return (dispatch) => {\n        const auth = {\n            headers: {\n                Authorization: token\n            }\n        };\n        axios.delete(api.URL_PLACES_DELETE + id, auth).then(res => {\n            dispatch(onDeletePlace(id));\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n}\n\nconst updatePlace = (place) => {\n    return {\n        type: actionTypes.EDIT_PLACE,\n        place: place,\n    }\n}\n\nexport const editPlace = (place, token) => {\n    return (dispatch) => {\n        const auth = {\n            headers: {\n                Authorization: token\n            }\n        };\n        axios.put(api.URL_PLACES_EDIT + place.ID, place, auth).then(res => {\n            dispatch(updatePlace(place));\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}