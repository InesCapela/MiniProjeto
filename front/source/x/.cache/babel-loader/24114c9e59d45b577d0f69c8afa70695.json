{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  places: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_ALL_PLACES:\n      return { ...state,\n        places: action.places\n      };\n\n    case actionTypes.GET_USER_PLACES:\n      return { ...state,\n        places: action.places\n      };\n\n    case actionTypes.CREATE_PLACE:\n      const newPlace = { ...action.place,\n        ID: action.id,\n        people: 0\n      };\n      return { ...state,\n        places: state.places.concat(newPlace)\n      };\n\n    case actionTypes.EDIT_PLACE:\n      let placearray = state.places.filter(place => place.ID !== action.place.ID);\n      let newarray = placearray.concat(action.place);\n      return { ...state,\n        places: newarray\n      };\n\n    case actionTypes.DELETE_PLACE:\n      return { ...state,\n        places: state.places.filter(place => place.ID !== action.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/app/src/store/reducers/places.js"],"names":["actionTypes","initialState","places","reducer","state","action","type","GET_ALL_PLACES","GET_USER_PLACES","CREATE_PLACE","newPlace","place","ID","id","people","concat","EDIT_PLACE","placearray","filter","newarray","DELETE_PLACE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AADS,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAE9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAMN,WAAW,CAACO,cAAlB;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAFZ,OAAP;;AAIJ,SAAMF,WAAW,CAACQ,eAAlB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,MAAM,EAAEG,MAAM,CAACH;AAFZ,OAAP;;AAIJ,SAAMF,WAAW,CAACS,YAAlB;AACI,YAAMC,QAAQ,GAAG,EACb,GAAGL,MAAM,CAACM,KADG;AAEbC,QAAAA,EAAE,EAAEP,MAAM,CAACQ,EAFE;AAGbC,QAAAA,MAAM,EAAE;AAHK,OAAjB;AAKA,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaa,MAAb,CAAoBL,QAApB;AAFL,OAAP;;AAIJ,SAAMV,WAAW,CAACgB,UAAlB;AACI,UAAIC,UAAU,GAAGb,KAAK,CAACF,MAAN,CAAagB,MAAb,CAAqBP,KAAD,IAAYA,KAAK,CAACC,EAAN,KAAaP,MAAM,CAACM,KAAP,CAAaC,EAA1D,CAAjB;AACA,UAAIO,QAAQ,GAAGF,UAAU,CAACF,MAAX,CAAkBV,MAAM,CAACM,KAAzB,CAAf;AACA,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,MAAM,EAAEiB;AAFL,OAAP;;AAIJ,SAAMnB,WAAW,CAACoB,YAAlB;AACI,aAAO,EACH,GAAGhB,KADA;AAEHF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAagB,MAAb,CAAqBP,KAAD,IAAYA,KAAK,CAACC,EAAN,KAAaP,MAAM,CAACQ,EAApD;AAFL,OAAP;;AAIJ;AACI,aAAOT,KAAP;AAlCR;AAoCH,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    places: [],\n};\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case (actionTypes.GET_ALL_PLACES):\n            return {\n                ...state,\n                places: action.places,\n            };\n        case (actionTypes.GET_USER_PLACES):\n            return {\n                ...state,\n                places: action.places,\n            };\n        case (actionTypes.CREATE_PLACE):\n            const newPlace = {\n                ...action.place,\n                ID: action.id,\n                people: 0,\n            }\n            return {\n                ...state,\n                places: state.places.concat(newPlace),\n            };\n        case (actionTypes.EDIT_PLACE):\n            let placearray = state.places.filter((place) => (place.ID !== action.place.ID));\n            let newarray = placearray.concat(action.place);\n            return {\n                ...state,\n                places: newarray,\n            };\n        case (actionTypes.DELETE_PLACE):\n            return {\n                ...state,\n                places: state.places.filter((place) => (place.ID !== action.id)),\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}