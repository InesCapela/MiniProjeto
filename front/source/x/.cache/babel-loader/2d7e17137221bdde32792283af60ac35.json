{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/app/src/components/Places/Places.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport Place from './Place';\nimport * as actions from '../../store/actions/index';\nimport * as api from '../../store/actions/api';\nimport socketIOClient from \"socket.io-client\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport List from '@material-ui/core/List';\nimport { CircularProgress } from '@material-ui/core';\nimport { useStyles } from '../Styles/Styles';\nimport InfoPlace from './InfoPlace';\n\nconst Places = props => {\n  _s();\n\n  const socket = props.socket;\n  const [selectedPlace, setSelectedPlace] = useState(null); // styles\n\n  const classes = useStyles(); //dependecy\n\n  const {\n    onGetAllPlaces,\n    onGetUserPlaces\n  } = props;\n  useEffect(() => {\n    if (props.token !== null) {\n      if (props.isAdmin) {\n        onGetAllPlaces(props.token);\n      } else {\n        onGetUserPlaces(props.token);\n      }\n    }\n  }, [onGetAllPlaces, onGetUserPlaces, props.token, props.isAdmin]);\n\n  let places = /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 18\n  }, this);\n\n  const selectedPlaceHandler = (event, place) => {\n    event.preventDefault();\n    socket.emit(\"change-place\", place.name);\n    setSelectedPlace(place, socket);\n  }; // update place\n\n\n  const updatePlaceHandler = (event, place) => {\n    event.preventDefault();\n    props.onUpdatePlace(place, props.token);\n  }; // delete place\n\n\n  const deletePlaceHandler = (event, id) => {\n    event.preventDefault();\n    props.onDeletePlace(id, props.token);\n    setSelectedPlace(null);\n  };\n\n  const addPersonHandler = (event, pname, socket) => {\n    event.preventDefault();\n    socket.emit(\"add-people\", \"\");\n  };\n\n  const subPersonHandler = (event, pname, socket) => {\n    event.preventDefault();\n    socket.emit(\"sub-people\", \"\");\n  };\n\n  if (!props.loading) {\n    places = props.places.map(place => {\n      return /*#__PURE__*/_jsxDEV(Place, {\n        id: place.ID,\n        name: place.name,\n        lat: place.latitude,\n        lng: place.longitude,\n        persons: place.people,\n        selectPlace: selectedPlaceHandler\n      }, place.ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  if (places.length === 0) {\n    places = /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this);\n  }\n\n  let isAuth = !props.token ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 33\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isAuth, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.places,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Places \", /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          children: places\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), selectedPlace && places.length !== 0 ? /*#__PURE__*/_jsxDEV(InfoPlace, {\n          isAdmin: props.isAdmin,\n          place: selectedPlace,\n          socket: socket,\n          updatePlace: updatePlaceHandler,\n          deletePlace: deletePlaceHandler,\n          addPersonHandler: addPersonHandler,\n          subPersonHandler: subPersonHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 61\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}; // get state from reducer\n\n\n_s(Places, \"ket6oXA4E1WZVkEr9sun8EW2aQQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Places;\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    isAdmin: state.auth.isAdmin,\n    places: state.places.places,\n    loading: state.loadingError.loading,\n    error: state.loadingError.error\n  };\n}; // actions to reducer (dispatch)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetAllPlaces: token => dispatch(actions.fetchAllPlaces(token)),\n    onGetUserPlaces: token => dispatch(actions.fetchUserPlaces(token)),\n    onUpdatePlace: (place, token) => dispatch(actions.editPlace(place, token)),\n    onDeletePlace: (id, token) => dispatch(actions.deletePlace(id, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Places);\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/app/src/components/Places/Places.js"],"names":["React","useEffect","useState","connect","Redirect","Place","actions","api","socketIOClient","HomeIcon","List","CircularProgress","useStyles","InfoPlace","Places","props","socket","selectedPlace","setSelectedPlace","classes","onGetAllPlaces","onGetUserPlaces","token","isAdmin","places","selectedPlaceHandler","event","place","preventDefault","emit","name","updatePlaceHandler","onUpdatePlace","deletePlaceHandler","id","onDeletePlace","addPersonHandler","pname","subPersonHandler","loading","map","ID","latitude","longitude","people","length","isAuth","display","width","mapStateToProps","state","auth","loadingError","error","mapDispatchToProps","dispatch","fetchAllPlaces","fetchUserPlaces","editPlace","deletePlace"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport Place from './Place';\nimport * as actions from '../../store/actions/index';\nimport * as api from '../../store/actions/api';\nimport socketIOClient from \"socket.io-client\";\nimport HomeIcon from '@material-ui/icons/Home';\nimport List from '@material-ui/core/List';\nimport { CircularProgress } from '@material-ui/core';\nimport { useStyles } from '../Styles/Styles';\nimport InfoPlace from './InfoPlace';\n\nconst Places = props => {\n\n    const socket = props.socket;\n\n    const [selectedPlace, setSelectedPlace] = useState(null);\n\n    // styles\n    const classes = useStyles();\n\n    //dependecy\n    const { onGetAllPlaces, onGetUserPlaces } = props;\n\n    useEffect(() => {\n        if (props.token !== null) {\n            if (props.isAdmin) {\n                onGetAllPlaces(props.token);\n            } else {\n                onGetUserPlaces(props.token)\n            }\n        }\n    }, [onGetAllPlaces, onGetUserPlaces, props.token, props.isAdmin])\n\n\n    let places = <CircularProgress />\n\n    const selectedPlaceHandler = (event, place) => {\n        event.preventDefault();\n        socket.emit(\"change-place\", place.name);\n        setSelectedPlace(place, socket);\n    }\n\n    // update place\n    const updatePlaceHandler = (event, place) => {\n        event.preventDefault();\n        props.onUpdatePlace(place, props.token);\n    }\n\n    // delete place\n    const deletePlaceHandler = (event, id) => {\n        event.preventDefault();\n        props.onDeletePlace(id, props.token);\n        setSelectedPlace(null);\n    }\n\n    const addPersonHandler = (event, pname, socket) => {\n        event.preventDefault();\n        socket.emit(\"add-people\", \"\")\n    }\n\n    const subPersonHandler = (event, pname, socket) => {\n        event.preventDefault();\n        socket.emit(\"sub-people\", \"\")\n    }\n\n    if (!props.loading) {\n        places = props.places.map(place => {\n            return <Place\n                key={place.ID}\n                id={place.ID}\n                name={place.name}\n                lat={place.latitude}\n                lng={place.longitude}\n                persons={place.people}\n                selectPlace={selectedPlaceHandler}\n            />\n        });\n    }\n\n    if (places.length === 0) {\n        places = (<h3>Not found!</h3>);\n    }\n\n    let isAuth = !props.token ? <Redirect to='/' /> : null;\n\n    return (\n        <div>\n            {isAuth}\n            <div className={classes.places}>\n                <h1>Places <HomeIcon /></h1>\n                <div style={{ display: 'flex', width: '100%' }}>\n                    <List>\n                        {places}\n                    </List>\n\n                    {selectedPlace && places.length !== 0 ? <InfoPlace\n                        isAdmin={props.isAdmin}\n                        place={selectedPlace}\n                        socket={socket}\n                        updatePlace={updatePlaceHandler}\n                        deletePlace={deletePlaceHandler}\n                        addPersonHandler={addPersonHandler}\n                        subPersonHandler={subPersonHandler} /> : null}\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\n// get state from reducer\nconst mapStateToProps = (state) => {\n    return {\n        token: state.auth.token,\n        isAdmin: state.auth.isAdmin,\n        places: state.places.places,\n        loading: state.loadingError.loading,\n        error: state.loadingError.error,\n    };\n}\n\n// actions to reducer (dispatch)\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGetAllPlaces: (token) => dispatch(actions.fetchAllPlaces(token)),\n        onGetUserPlaces: (token) => dispatch(actions.fetchUserPlaces(token)),\n        onUpdatePlace: (place, token) => dispatch(actions.editPlace(place, token)),\n        onDeletePlace: (id, token) => dispatch(actions.deletePlace(id, token)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Places);"]},"metadata":{},"sourceType":"module"}