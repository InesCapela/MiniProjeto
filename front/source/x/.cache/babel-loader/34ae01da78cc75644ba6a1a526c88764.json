{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  users: [],\n  userPlaces: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.GET_ALL_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case actionTypes.CREATE_USER:\n      const newUser = {\n        ID: action.id,\n        username: action.username\n      };\n      return { ...state,\n        users: state.users.concat(newUser)\n      };\n\n    case actionTypes.EDIT_USER:\n      const updatedUser = {\n        ID: action.user.id,\n        username: action.user.username,\n        password: action.user.password,\n        isAdmin: action.user.isAdmin,\n        places: action.user.places\n      };\n      let userarray = state.users.filter(user => user.ID !== action.user.id);\n      let newarray = userarray.concat(updatedUser);\n      return { ...state,\n        users: newarray\n      };\n\n    case actionTypes.DELETE_USER:\n      return { ...state,\n        users: state.users.filter(user => user.ID !== action.id)\n      };\n\n    case actionTypes.GET_USER_PLACES_ADMIN:\n      return { ...state,\n        userPlaces: action.userPlaces\n      };\n\n    case actionTypes.ADD_PLACE_TO_USER:\n      return { ...state,\n        userPlaces: state.userPlaces.concat(action.place)\n      };\n\n    case actionTypes.REMOVE_PLACE_FROM_USER:\n      return { ...state,\n        userPlaces: state.userPlaces.filter(place => place.ID !== action.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/app/src/store/reducers/users.js"],"names":["actionTypes","initialState","users","userPlaces","reducer","state","action","type","GET_ALL_USERS","CREATE_USER","newUser","ID","id","username","concat","EDIT_USER","updatedUser","user","password","isAdmin","places","userarray","filter","newarray","DELETE_USER","GET_USER_PLACES_ADMIN","ADD_PLACE_TO_USER","place","REMOVE_PLACE_FROM_USER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAMP,WAAW,CAACQ,aAAlB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFX,OAAP;;AAIJ,SAAMF,WAAW,CAACS,WAAlB;AACI,YAAMC,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEL,MAAM,CAACM,EADC;AAEZC,QAAAA,QAAQ,EAAEP,MAAM,CAACO;AAFL,OAAhB;AAIA,aAAO,EACH,GAAGR,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYY,MAAZ,CAAmBJ,OAAnB;AAFJ,OAAP;;AAIJ,SAAMV,WAAW,CAACe,SAAlB;AACI,YAAMC,WAAW,GAAG;AAChBL,QAAAA,EAAE,EAAEL,MAAM,CAACW,IAAP,CAAYL,EADA;AAEhBC,QAAAA,QAAQ,EAAEP,MAAM,CAACW,IAAP,CAAYJ,QAFN;AAGhBK,QAAAA,QAAQ,EAAEZ,MAAM,CAACW,IAAP,CAAYC,QAHN;AAIhBC,QAAAA,OAAO,EAAEb,MAAM,CAACW,IAAP,CAAYE,OAJL;AAKhBC,QAAAA,MAAM,EAAEd,MAAM,CAACW,IAAP,CAAYG;AALJ,OAApB;AAOA,UAAIC,SAAS,GAAGhB,KAAK,CAACH,KAAN,CAAYoB,MAAZ,CAAoBL,IAAD,IAAWA,IAAI,CAACN,EAAL,KAAYL,MAAM,CAACW,IAAP,CAAYL,EAAtD,CAAhB;AACA,UAAIW,QAAQ,GAAGF,SAAS,CAACP,MAAV,CAAiBE,WAAjB,CAAf;AACA,aAAO,EACH,GAAGX,KADA;AAEHH,QAAAA,KAAK,EAAEqB;AAFJ,OAAP;;AAIJ,SAAMvB,WAAW,CAACwB,WAAlB;AACI,aAAO,EACH,GAAGnB,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYoB,MAAZ,CAAoBL,IAAD,IAAWA,IAAI,CAACN,EAAL,KAAYL,MAAM,CAACM,EAAjD;AAFJ,OAAP;;AAIJ,SAAMZ,WAAW,CAACyB,qBAAlB;AACI,aAAO,EACH,GAAGpB,KADA;AAEHF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAFhB,OAAP;;AAIJ,SAAMH,WAAW,CAAC0B,iBAAlB;AACI,aAAO,EACH,GAAGrB,KADA;AAEHF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,CAAiBW,MAAjB,CAAwBR,MAAM,CAACqB,KAA/B;AAFT,OAAP;;AAIJ,SAAM3B,WAAW,CAAC4B,sBAAlB;AACI,aAAO,EACH,GAAGvB,KADA;AAEHF,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,CAAiBmB,MAAjB,CAAyBK,KAAD,IAAYA,KAAK,CAAChB,EAAN,KAAaL,MAAM,CAACM,EAAxD;AAFT,OAAP;;AAIJ;AACI,aAAOP,KAAP;AAlDR;AAoDH,CArDD;;AAuDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    users: [],\n    userPlaces: [],\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case (actionTypes.GET_ALL_USERS):\n            return {\n                ...state,\n                users: action.users,\n            };\n        case (actionTypes.CREATE_USER):\n            const newUser = {\n                ID: action.id,\n                username: action.username,\n            }\n            return {\n                ...state,\n                users: state.users.concat(newUser),\n            };\n        case (actionTypes.EDIT_USER):\n            const updatedUser = {\n                ID: action.user.id,\n                username: action.user.username,\n                password: action.user.password,\n                isAdmin: action.user.isAdmin,\n                places: action.user.places,\n            };\n            let userarray = state.users.filter((user) => (user.ID !== action.user.id));\n            let newarray = userarray.concat(updatedUser);\n            return {\n                ...state,\n                users: newarray\n            };\n        case (actionTypes.DELETE_USER):\n            return {\n                ...state,\n                users: state.users.filter((user) => (user.ID !== action.id)),\n            };\n        case (actionTypes.GET_USER_PLACES_ADMIN):\n            return {\n                ...state,\n                userPlaces: action.userPlaces,\n            };\n        case (actionTypes.ADD_PLACE_TO_USER):\n            return {\n                ...state,\n                userPlaces: state.userPlaces.concat(action.place),\n            };\n        case (actionTypes.REMOVE_PLACE_FROM_USER):\n            return {\n                ...state,\n                userPlaces: state.userPlaces.filter((place) => (place.ID !== action.id)),\n            };\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}