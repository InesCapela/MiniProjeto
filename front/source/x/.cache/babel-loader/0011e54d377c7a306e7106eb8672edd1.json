{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport Login from './components/Login/Login';\nimport Places from './components/Places/Places';\nimport MapLeaflet from './components/Map/MapLeaflet';\nimport Logout from './components/Logout/Logout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Users from './components/Users/Users';\nimport { connect } from 'react-redux';\nimport PlacesPage from './components/Places/PlacesPage';\n\nconst App = props => {\n  const routes = /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/places\",\n      component: PlacesPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/map\",\n      component: MapLeaflet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/users\",\n      component: Users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/logout\",\n      component: Logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      render: () => /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          children: routes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // get state from reducer\n\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    isAdmin: state.auth.isAdmin\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/app/src/App.js"],"names":["React","BrowserRouter","Redirect","Route","Switch","Layout","Login","Places","MapLeaflet","Logout","Users","connect","PlacesPage","App","props","routes","mapStateToProps","state","token","auth","isAdmin"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnB,QAAMC,MAAM,gBACV,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEH;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAEJ;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAED;AAAjC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEH;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,MAAM,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE,QAAC,MAAD;AAAA,oBACGS;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1BD,C,CA4BA;;;KA5BMF,G;;AA6BN,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACE,IAAN,CAAWD,KADb;AAELE,IAAAA,OAAO,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAFf,GAAP;AAID,CALD;;AAOA,eAAeT,OAAO,CAACK,eAAD,EAAkB,IAAlB,CAAP,CAA+BH,GAA/B,CAAf","sourcesContent":["import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport Layout from './components/Layout/Layout';\nimport Login from './components/Login/Login';\nimport Places from './components/Places/Places';\nimport MapLeaflet from './components/Map/MapLeaflet';\nimport Logout from './components/Logout/Logout';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Users from './components/Users/Users';\nimport { connect } from 'react-redux';\nimport PlacesPage from './components/Places/PlacesPage';\n\nconst App = props => {\n\n  const routes = (\n    <Switch>\n      <Route path=\"/places\" component={PlacesPage} />\n      <Route path=\"/map\" component={MapLeaflet} />\n      <Route path=\"/users\" component={Users} />\n      <Route path=\"/logout\" component={Logout} />\n      <Route path=\"/\" component={Login} />\n      <Route render={() => <h1>Not found!</h1>} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n\n  return (\n    <React.Fragment>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Layout>\n            {routes}\n          </Layout>\n        </div>\n      </BrowserRouter>\n    </React.Fragment>\n  );\n\n}\n\n// get state from reducer\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    isAdmin: state.auth.isAdmin,\n  };\n}\n\nexport default connect(mapStateToProps, null)(App);\n"]},"metadata":{},"sourceType":"module"}