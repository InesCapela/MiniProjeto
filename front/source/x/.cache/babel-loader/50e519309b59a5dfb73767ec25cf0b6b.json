{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/app/src/components/Map/MapLeaflet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { Button, Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport Markerpop from './Markerpop';\nimport Markeradd from './Markeradd';\nimport 'leaflet/dist/leaflet.css';\nimport * as actions from '../../store/actions/index';\n\nconst MapLeaflet = props => {\n  _s();\n\n  const [opacity, setOpacity] = useState(0);\n  const placesl = props.places.map(place => {\n    return /*#__PURE__*/_jsxDEV(Markerpop, {\n      id: place.ID,\n      name: place.name,\n      lat: place.latitude,\n      long: place.longitude,\n      people: place.people\n    }, place.ID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  });\n  let isAuth = !props.token ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 33\n  }, this) : null;\n\n  const onAddPlaceHandler = (event, place) => {\n    event.preventDefault(); // create place\n\n    props.onAddPlace(place, props.token);\n  };\n\n  const opacityHandler = () => {\n    setOpacity(opacity === 0 ? 1 : 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [isAuth, props.isAdmin === true ? /*#__PURE__*/_jsxDEV(Button, {\n      onClick: opacityHandler,\n      variant: \"contained\",\n      color: \"primary\",\n      children: opacity === 1 ? 'Hide add marker' : 'Show add marker'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        height: '700px'\n      },\n      center: [41.1496100, -8.6109900],\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), placesl, props.token && props.isAdmin && opacity === 1 ? /*#__PURE__*/_jsxDEV(Markeradd, {\n        addPlace: onAddPlaceHandler,\n        opacity: opacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 66\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MapLeaflet, \"p1n/Uo6wpRbHsEj2nZzW4Jy++A0=\");\n\n_c = MapLeaflet;\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    isAdmin: state.auth.isAdmin,\n    places: state.places.places\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddPlace: (place, token) => dispatch(actions.createPlace(place, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapLeaflet);\n\nvar _c;\n\n$RefreshReg$(_c, \"MapLeaflet\");","map":{"version":3,"sources":["/app/src/components/Map/MapLeaflet.js"],"names":["React","useState","MapContainer","TileLayer","Button","Container","connect","Redirect","Markerpop","Markeradd","actions","MapLeaflet","props","opacity","setOpacity","placesl","places","map","place","ID","name","latitude","longitude","people","isAuth","token","onAddPlaceHandler","event","preventDefault","onAddPlace","opacityHandler","isAdmin","height","mapStateToProps","state","auth","mapDispatchToProps","dispatch","createPlace"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { Button, Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\n\nimport Markerpop from './Markerpop';\nimport Markeradd from './Markeradd';\nimport 'leaflet/dist/leaflet.css';\nimport * as actions from '../../store/actions/index';\n\nconst MapLeaflet = props => {\n\n    const [opacity, setOpacity] = useState(0);\n\n    const placesl = props.places.map(place => {\n        return <Markerpop\n            key={place.ID}\n            id={place.ID}\n            name={place.name}\n            lat={place.latitude}\n            long={place.longitude}\n            people={place.people}\n        />\n    });\n\n    let isAuth = !props.token ? <Redirect to='/' /> : null;\n\n    const onAddPlaceHandler = (event, place) => {\n        event.preventDefault();\n        // create place\n        props.onAddPlace(place, props.token);\n    }\n\n    const opacityHandler = () => {\n        setOpacity(opacity === 0 ? 1 : 0);\n    }\n\n    return (\n        <Container maxWidth=\"lg\">\n            {isAuth}\n            {props.isAdmin === true ?\n                <Button onClick={opacityHandler} variant=\"contained\" color=\"primary\">{opacity === 1 ? 'Hide add marker' : 'Show add marker'}</Button>\n                : null\n            }\n            <MapContainer style={{ height: '700px' }} center={[41.1496100, -8.6109900]} zoom={13}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {placesl}\n                {props.token && props.isAdmin && opacity === 1 ? <Markeradd addPlace={onAddPlaceHandler} opacity={opacity} /> : null}\n            </MapContainer>\n        </Container>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        token: state.auth.token,\n        isAdmin: state.auth.isAdmin,\n        places: state.places.places,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAddPlace: (place, token) => dispatch(actions.createPlace(place, token)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapLeaflet);\n"]},"metadata":{},"sourceType":"module"}