{"ast":null,"code":"import axios from 'axios';\nimport * as loadingErrorActions from '../actions/index';\nimport * as actionTypes from './actionTypes';\nimport * as api from './api';\n\nconst getAllPlaces = places => {\n  return {\n    type: actionTypes.GET_ALL_PLACES,\n    places: places\n  };\n};\n\nexport const fetchAllPlaces = token => {\n  return dispatch => {\n    dispatch(loadingErrorActions.startRequest());\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.get(api.URL_GET_PLACES, auth).then(response => {\n      dispatch(getAllPlaces(response.data.data));\n      dispatch(loadingErrorActions.endRequest());\n    }).catch(err => {\n      dispatch(loadingErrorActions.errorRequest(err.toString()));\n    });\n  };\n};","map":{"version":3,"sources":["/app/src/store/actions/places.js"],"names":["axios","loadingErrorActions","actionTypes","api","getAllPlaces","places","type","GET_ALL_PLACES","fetchAllPlaces","token","dispatch","startRequest","auth","headers","Authorization","get","URL_GET_PLACES","then","response","data","endRequest","catch","err","errorRequest","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,mBAAZ,MAAqC,kBAArC;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;;AAEA,MAAMC,YAAY,GAAIC,MAAD,IAAY;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,cADf;AAEHF,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMG,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACT,mBAAmB,CAACU,YAApB,EAAD,CAAR;AACA,UAAMC,IAAI,GAAG;AACTC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEL;AADV;AADA,KAAb;AAKAT,IAAAA,KAAK,CAACe,GAAN,CAAUZ,GAAG,CAACa,cAAd,EAA8BJ,IAA9B,EAAoCK,IAApC,CAAyCC,QAAQ,IAAI;AACjDR,MAAAA,QAAQ,CAACN,YAAY,CAACc,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAb,CAAR;AACAT,MAAAA,QAAQ,CAACT,mBAAmB,CAACmB,UAApB,EAAD,CAAR;AACH,KAHD,EAGGC,KAHH,CAGSC,GAAG,IAAI;AACZZ,MAAAA,QAAQ,CAACT,mBAAmB,CAACsB,YAApB,CAAiCD,GAAG,CAACE,QAAJ,EAAjC,CAAD,CAAR;AACH,KALD;AAMH,GAbD;AAcH,CAfM","sourcesContent":["import axios from 'axios';\n\nimport * as loadingErrorActions from '../actions/index';\nimport * as actionTypes from './actionTypes';\nimport * as api from './api'\n\nconst getAllPlaces = (places) => {\n    return {\n        type: actionTypes.GET_ALL_PLACES,\n        places: places\n    }\n}\n\nexport const fetchAllPlaces = (token) => {\n    return (dispatch) => {\n        dispatch(loadingErrorActions.startRequest());\n        const auth = {\n            headers: {\n                Authorization: token\n            }\n        };\n        axios.get(api.URL_GET_PLACES, auth).then(response => {\n            dispatch(getAllPlaces(response.data.data));\n            dispatch(loadingErrorActions.endRequest());\n        }).catch(err => {\n            dispatch(loadingErrorActions.errorRequest(err.toString()));\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}