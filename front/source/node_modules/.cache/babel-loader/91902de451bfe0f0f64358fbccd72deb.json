{"ast":null,"code":"import axios from 'axios';\nimport * as loadingErrorActions from '../actions/index';\nimport * as actionTypes from './actionTypes';\nimport * as api from \"./api\";\n\nconst getAllUsers = users => {\n  return {\n    type: actionTypes.GET_ALL_USERS,\n    users: users\n  };\n};\n\nexport const fetchAllUsers = token => {\n  return dispatch => {\n    dispatch(loadingErrorActions.startRequest());\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.get(api.URL_USERS, auth).then(response => {\n      dispatch(getAllUsers(response.data.data));\n      dispatch(loadingErrorActions.endRequest());\n    }).catch(err => {\n      dispatch(loadingErrorActions.errorRequest(err.toString()));\n    });\n  };\n};\n\nconst createNewUser = (username, id) => {\n  return {\n    type: actionTypes.CREATE_USER,\n    username: username,\n    id: id\n  };\n};\n\nexport const createUser = (username, password, token) => {\n  return dispatch => {\n    const newUser = {\n      username: username,\n      password: password\n    };\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.post(api.URL_USERS_ADD, newUser, auth).then(res => {\n      dispatch(createNewUser(username, res.data.userID));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst onDeleteUser = id => {\n  return {\n    type: actionTypes.DELETE_USER,\n    id: id\n  };\n};\n\nexport const deleteUser = (id, token) => {\n  return dispatch => {\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n    axios.delete(api.URL_USERS_DELETE + id, auth).then(res => {\n      dispatch(onDeleteUser(id));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nconst onUpdateUser = () => {\n  return {\n    type: actionTypes.DELETE_USER\n  };\n};\n\nexport const editUser = token => {\n  return dispatch => {\n    const auth = {\n      headers: {\n        Authorization: token\n      }\n    };\n  };\n};","map":{"version":3,"sources":["/app/src/store/actions/users.js"],"names":["axios","loadingErrorActions","actionTypes","api","getAllUsers","users","type","GET_ALL_USERS","fetchAllUsers","token","dispatch","startRequest","auth","headers","Authorization","get","URL_USERS","then","response","data","endRequest","catch","err","errorRequest","toString","createNewUser","username","id","CREATE_USER","createUser","password","newUser","post","URL_USERS_ADD","res","userID","console","log","onDeleteUser","DELETE_USER","deleteUser","delete","URL_USERS_DELETE","onUpdateUser","editUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport * as loadingErrorActions from '../actions/index';\nimport * as actionTypes from './actionTypes';\nimport * as api from \"./api\"\n\nconst getAllUsers = (users) => {\n    return {\n        type: actionTypes.GET_ALL_USERS,\n        users: users,\n    }\n}\n\nexport const fetchAllUsers = (token) => {\n    return (dispatch) => {\n        dispatch(loadingErrorActions.startRequest());\n        const auth = {\n            headers: {\n                Authorization: token\n            }\n        };\n        axios.get(api.URL_USERS, auth).then(response => {\n            dispatch(getAllUsers(response.data.data));\n            dispatch(loadingErrorActions.endRequest());\n        }).catch(err => {\n            dispatch(loadingErrorActions.errorRequest(err.toString()));\n        });\n    }\n}\n\nconst createNewUser = (username, id) => {\n    return {\n        type: actionTypes.CREATE_USER,\n        username: username,\n        id: id,\n    }\n}\n\nexport const createUser = (username, password, token) => {\n    return (dispatch) => {\n        const newUser = {\n            username: username,\n            password: password\n        };\n\n        const auth = {\n            headers: {\n                Authorization: token,\n            }\n        };\n\n        axios.post(api.URL_USERS_ADD, newUser, auth).then(res => {\n            dispatch(createNewUser(username, res.data.userID));\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n}\n\nconst onDeleteUser = (id) => {\n    return {\n        type: actionTypes.DELETE_USER,\n        id: id,\n    }\n}\n\nexport const deleteUser = (id, token) => {\n    return (dispatch) => {\n        const auth = {\n            headers: {\n                Authorization: token,\n            }\n        };\n\n        axios.delete(api.URL_USERS_DELETE + id, auth).then(res => {\n            dispatch(onDeleteUser(id));\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n}\n\nconst onUpdateUser = () => {\n    return {\n        type: actionTypes.DELETE_USER,\n\n    }\n}\n\nexport const editUser = (token) => {\n    return (dispatch) => {\n        const auth = {\n            headers: {\n                Authorization: token,\n            }\n        };\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}